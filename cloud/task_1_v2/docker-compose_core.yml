version: '3.8'

services:
  postgres:
    image: debezium/postgres:13-alpine
    ports:
      - "15432:5432"
    environment:
      - POSTGRES_USER=pgsync
      - POSTGRES_PASSWORD=qazwsx123
      - POSTGRES_DB=starcraft
  redis:
    image: redis
    command: redis-server --requirepass qazwsx123
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    ports:
      - "9201:9200"
      - "9301:9300"
    environment:
      - xpack.security.enabled=false
      - network.host=127.0.0.1
      - http.host=0.0.0.0
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.14.1
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9201
    depends_on:
      - elasticsearch
  pgsync:
    build:
      context: .
      dockerfile: ./docker/pgsync_docker/Dockerfile
    command: ./runserver.sh
    sysctls:
      - net.ipv4.tcp_keepalive_time=200
      - net.ipv4.tcp_keepalive_intvl=200
      - net.ipv4.tcp_keepalive_probes=5
    labels:
      org.label-schema.name: "pgsync"
      org.label-schema.description: "Postgres to elasticsearch sync"
      com.label-schema.service-type: "daemon"
    depends_on:
      - postgres
      - redis
      - elasticsearch
    environment:
      - PG_USER=pgsync
      - PG_HOST=postgres
      - PG_PASSWORD=qazwsx123
      - LOG_LEVEL=INFO
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_SCHEME=http
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_HOST=redis
      - REDIS_AUTH=qazwsx123
  backend:
    build: 
      context: .
      dockerfile: ./docker/backend_docker/Dockerfile
    depends_on:
      - postgres
      - elasticsearch
      - pgsync
    ports:
      - 8080:8080
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=pgsync
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=qazwsx123
      - POSTGRES_DB=starcraft
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_HOST=elasticsearch